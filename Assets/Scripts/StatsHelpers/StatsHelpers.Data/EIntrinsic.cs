// Auto-generated by EnumBuilderForStatsIntrinsic.cs on 7/12/2025 9:56:15 AM
// Based on IntrinsicSchemaObject assets found in StatSettings.
// Total items found: 1

using System;
using System.Runtime.CompilerServices;
using BovineLabs.Essence.Data;

namespace StatsHelpers.StatsHelpers.Data
{
    public enum EIntrinsic : byte
    {
        Speed = 1, // From: 1 Speed 1000, GUID Prefix: 83cb
    }

    public static class EIntrinsicExt
    {
        public static string GetGuid(this EIntrinsic item)
        {
            return item switch
            {
                EIntrinsic.Speed => "83cb",
                _ => throw new ArgumentOutOfRangeException(nameof(item), item, null)
            };
        }

        public static string ToName(this EIntrinsic item)
        {
            return item switch
            {
                EIntrinsic.Speed => "Speed",
                _ => throw new ArgumentOutOfRangeException(nameof(item), item, null)
            };
        }

        public static EIntrinsic FromGuid(string guid4)
        {
            if (guid4 == null || guid4.Length != 4)
                throw new ArgumentException($"GUID must be 4 characters long.", nameof(guid4));

            return guid4 switch
            {
                "83cb" => EIntrinsic.Speed,
                _ => throw new ArgumentOutOfRangeException(nameof(guid4), guid4, null)
            };
        }

        public static float GetFactor(this EIntrinsic item)
        {
            return item switch
            {
                EIntrinsic.Speed => 1000f,
                _ => throw new ArgumentOutOfRangeException(nameof(item), item, null)
            };
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static IntrinsicKey ToKey(this EIntrinsic intrinsic, out float factor)
        {
            factor = intrinsic.GetFactor();
            return new IntrinsicKey { Value = (ushort)intrinsic };
        }
    }
}